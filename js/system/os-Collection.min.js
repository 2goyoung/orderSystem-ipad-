orderSystem.Collection.empty=Backbone.Collection.extend({}),orderSystem.Collection.teaList=Backbone.Collection.extend({model:orderSystem.Model.teaItem,url:orderSystem.urlRouter.data.teaList,initialize:function(){_.bindAll(this,"fetchSuccess","fetchError","parse"),this.fetch({data:{_seq_dishStyle:2},success:this.fetchSuccess,error:this.fetchError}),this.deferred=$.Deferred()},deferred:Function.constructor.prototype,fetchSuccess:function(n,t){return n.deferred.resolve(),t},fetchError:function(){alert("error")},parse:function(n){return n}}),orderSystem.Collection.teaOrder=Backbone.Collection.extend({initialize:function(){_.bind(this,"calculate","toJsonList")},calculate:function(){var n=0,t=0;return this.each(function(i){t+=i.attributes.ordNum,n+=i.attributes.price*i.attributes.ordNum}),{totalPrice:n,totalNum:t}},toJsonList:function(){var n=new orderSystem.Collection.empty;return this.each(function(t){n.add(new orderSystem.Model.empty({dishId:t.attributes.dishId,ordNum:t.attributes.ordNum,saleId:t.attributes.salePrices[0].saleId}))}),JSON.stringify(n)}}),orderSystem.Collection.areaCode=Backbone.Collection.extend({url:orderSystem.urlRouter.data.areaCode,initialize:function(){}}),orderSystem.Collection.tableList=Backbone.Collection.extend({url:orderSystem.urlRouter.data.tableList,initialize:function(){}}),orderSystem.Collection.dinCatList=Backbone.Collection.extend({model:orderSystem.Model.dinCatItem,url:orderSystem.urlRouter.data.dinCat,initialize:function(){_.bindAll(this,"fetchSuccess","fetchError","parse"),this.fetch({success:this.fetchSuccess,error:this.fetchError}),this.deferred=$.Deferred()},deferred:Function.constructor.prototype,fetchSuccess:function(n,t){return n.deferred.resolve(),t},fetchError:function(){alert("菜品列表请求失败")},parse:function(n){return n}}),orderSystem.Collection.dinList=Backbone.Collection.extend({model:orderSystem.Model.dinList,url:orderSystem.urlRouter.data.dinList,initialize:function(){}}),orderSystem.Collection.dinListLoaded=Backbone.Collection.extend({model:orderSystem.Model.dinList}),orderSystem.Collection.dinOrder=Backbone.Collection.extend({initialize:function(){_.bind(this,"calculate","toJsonList","getSortList")},calculate:function(){var n=0,t=0;return this.each(function(i){i.attributes.state!=0&&(i.attributes.ordNum==0?(t+=parseInt(i.attributes.total),n+=i.attributes.price*parseInt(i.attributes.total)):(t+=parseInt(i.attributes.ordNum),n+=i.attributes.price*parseInt(i.attributes.ordNum)))}),{totalPrice:n,totalNum:t}},toJsonList:function(n){var t=new orderSystem.Collection.empty,r,i;return n===undefined?this.each(function(n){t.add(new orderSystem.Model.empty({dishId:n.attributes.dishId,saleId:n.attributes.salePrices[0].saleId,ordNum:n.attributes.ordNum}))}):$.isArray(n)?(r=n,i=[],_.each(r,function(n){i.push(parseInt(n))}),this.each(function(n){$.inArray(n.attributes.state,i)!=-1&&t.add(new orderSystem.Model.empty({dishId:n.attributes.dishId,saleId:n.attributes.salePrices[0].saleId,ordNum:n.attributes.ordNum}))})):alert("参数应为数组"),JSON.stringify(t)},getSortList:function(n){return this.where({typeId:n})}}),orderSystem.Collection.order=Backbone.Collection.extend({url:orderSystem.urlRouter.data.getOrder,initialize:function(){_.bindAll(this,"fetchSuccess","fetchError","parse"),this.fetch({data:{_leq_ordId:orderSystem.datas.order.id},success:this.fetchSuccess,error:this.fetchError}),this.deferred=$.Deferred()},deferred:Function.constructor.prototype,fetchSuccess:function(n,t){return n.deferred.resolve(),t},fetchError:function(){alert("获取订单失败")},parse:function(n){return n}}),orderSystem.Collection.orderInfo=Backbone.Collection.extend({url:orderSystem.urlRouter.data.orderInfo,initialize:function(){_.bindAll(this,"fetchSuccess","fetchError","parse"),this.fetch({data:{_leq_ordId:orderSystem.datas.order.id},success:this.fetchSuccess,error:this.fetchError}),this.deferred=$.Deferred()},deferred:Function.constructor.prototype,fetchSuccess:function(n,t){return n.deferred.resolve(),t},fetchError:function(){alert("获取订单信息失败")},parse:function(n){return n}});
//@ sourceMappingURL=os-Collection.min.js.map